@inproceedings{gonthierFourColourTheorem2008a,
  title     = {The {{Four Colour Theorem}}: {{Engineering}} of a {{Formal Proof}}},
  booktitle = {Computer {{Mathematics}}},
  author    = {Gonthier, Georges},
  editor    = {Kapur, Deepak},
  year      = {2008},
  pages     = {333--333},
  publisher = {{Springer Berlin Heidelberg}},
  address   = {{Berlin, Heidelberg}},
  abstract  = {The 150 year old Four Colour Theorem is the first famous result with a proof that requires large computer calculations. Such proofs are still controversial: It is thought that computer programs cannot be reviewed with mathematical rigor.},
  isbn      = {978-3-540-87827-8}
}

@incollection{erdosCombinatorialProblemGeometry2009,
  title = {A {{Combinatorial Problem}} in {{Geometry}}},
  booktitle = {Classic {{Papers}} in {{Combinatorics}}},
  author = {Erd{\"o}s, P. and Szckeres, G.},
  editor = {Gessel, Ira and Rota, Gian-Carlo},
  year = {2009},
  pages = {49--56},
  publisher = {{Birkh{\"a}user Boston}},
  address = {{Boston, MA}},
  doi = {10.1007/978-0-8176-4842-8_3},
  urldate = {2023-09-29},
  isbn = {978-0-8176-4841-1 978-0-8176-4842-8},
  langid = {english},
  file = {/Users/bsuberca/Zotero/storage/GDLH42NA/Erdös and Szckeres - 2009 - A Combinatorial Problem in Geometry.pdf}
}


@article{hortonSetsNoEmpty1983,
  title = {Sets with {{No Empty Convex}} 7-{{Gons}}},
  author = {Horton, J. D.},
  year = {1983},
  journal = {Canadian Mathematical Bulletin},
  edition = {2018/11/20},
  volume = {26},
  number = {4},
  pages = {482--484},
  publisher = {{Cambridge University Press}},
  issn = {0008-4395},
  doi = {10.4153/CMB-1983-077-8},
  abstract = {Erd{\"o}s has defined g(n) as the smallest integer such that any set of g(n) points in the plane, no three collinear, contains the vertex set of a convex n-gon whose interior contains no point of this set. Arbitrarily large sets containing no empty convex 7-gon are constructed, showing that g(n) does not exist for n{$\geq$}l. Whether g(6) exists is unknown.},
  keywords = {52A40,Combinatorial geometry,convex polygon}
}

@article{Harborth1978,
author = {Harborth, Heiko},
journal = {Elemente der Mathematik},
keywords = {Pentagous in Plane Point Sets},
pages = {116-118},
title = {Konvexe Fünfecke in ebenen Punktmengen.},
url = {http://eudml.org/doc/141217},
volume = {33},
year = {1978},
}


@incollection{appelFourColorProblem1978,
  title     = {The {{Four-Color Problem}}},
  booktitle = {Mathematics {{Today Twelve Informal Essays}}},
  author    = {Appel, Kenneth and Haken, Wolfgang},
  editor    = {Steen, Lynn Arthur},
  year      = {1978},
  pages     = {153--180},
  publisher = {{Springer New York}},
  address   = {{New York, NY}},
  doi       = {10.1007/978-1-4613-9435-8_7},
  abstract  = {In 1976, the Four-Color Problem was solved: every map drawn on a sheet of paper can be colored with only four colors in such a way that countries sharing a common border receive different colors. This result was of interest to the mathematical community since many mathematicians had tried in vain for over a hundred years to prove this simple-sounding statement. Yet among mathematicians who were not aware of the developments leading to the proof, the outcome had rather dismaying aspects, for the proof made unprecedented use of computer computation; the correctness of the proof cannot be checked without the aid of a computer. Moreover, adding to the strangeness of the proof, some of the crucial ideas were perfected by computer experiments. One can never rule out the chance that a short proof of the Four-Color Theorem might some day be found, perhaps by the proverbial bright high-school student. But it is also conceivable that no such proof is possible. In this case a new and interesting type of theorem has appeared, one which has no proof of the traditional type.},
  isbn      = {978-1-4613-9435-8}
}

@inproceedings{Walters2004ItAT,
  title  = {It Appears That Four Colors Suffice : A Historical Overview of the Four-Color Theorem},
  author = {Mark Walters},
  year   = {2004},
  url    = {https://api.semanticscholar.org/CorpusID:14382286}
}

@inproceedings{Wilson2002GraphsCA,
  title  = {Graphs, Colourings and the Four-Colour Theorem},
  author = {Robert Arnott Wilson and Robert Wilson},
  year   = {2002},
  url    = {https://api.semanticscholar.org/CorpusID:118001238}
}

@misc{avigad2023mathematics,
  title         = {Mathematics and the formal turn},
  author        = {Jeremy Avigad},
  year          = {2023},
  eprint        = {2311.00007},
  archiveprefix = {arXiv},
  primaryclass  = {math.HO}
}

@inproceedings{Subercaseaux_Heule_2023,
  series     = {Lecture Notes in Computer Science},
  title      = {The Packing Chromatic Number of the Infinite Square Grid is 15},
  volume     = {13993},
  rights     = {All rights reserved},
  doi        = {10.1007/978-3-031-30823-9_20},
  booktitle  = {Tools and Algorithms for the Construction and Analysis of Systems - 29th International Conference, TACAS 2023, Held as Part of ETAPS 2022, Proceedings, Part I},
  publisher  = {Springer},
  author     = {Subercaseaux, Bernardo and Heule, Marijn J. H.},
  editor     = {Sankaranarayanan, Sriram and Sharygina, Natasha},
  year       = {2023},
  pages      = {389–406},
  collection = {Lecture Notes in Computer Science}
}

@misc{brakensiek2023resolution,
  title         = {The Resolution of Keller's Conjecture},
  author        = {Joshua Brakensiek and Marijn Heule and John Mackey and David Narváez},
  year          = {2023},
  eprint        = {1910.03740},
  archiveprefix = {arXiv},
  primaryclass  = {math.CO}
}

@inbook{Heule_2016,
  title     = {Solving and Verifying the Boolean Pythagorean Triples Problem via Cube-and-Conquer},
  isbn      = {9783319409702},
  issn      = {1611-3349},
  url       = {http://dx.doi.org/10.1007/978-3-319-40970-2_15},
  doi       = {10.1007/978-3-319-40970-2_15},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer International Publishing},
  author    = {Heule, Marijn J. H. and Kullmann, Oliver and Marek, Victor W.},
  year      = {2016},
  pages     = {228–245}
}

@misc{konev2014sat,
      title={A SAT Attack on the Erdos Discrepancy Conjecture}, 
      author={Boris Konev and Alexei Lisitsa},
      year={2014},
      eprint={1402.2184},
      archivePrefix={arXiv},
      primaryClass={cs.DM}
}

@article{lambTwohundredterabyteMathsProof2016,
  title = {Two-Hundred-Terabyte Maths Proof Is Largest Ever},
  author = {Lamb, Evelyn},
  year = {2016},
  month = jun,
  journal = {Nature},
  volume = {534},
  number = {7605},
  pages = {17--18},
  issn = {1476-4687},
  doi = {10.1038/nature.2016.19990},
  abstract = {A computer cracks the Boolean Pythagorean triples problem {\textemdash} but is it really maths?}
}


@misc{emptyHexagonNumber,
      title={Happy ending: An empty hexagon in every set of 30 points}, 
      author={Marijn J. H. Heule and Manfred Scheucher},
      year={2024},
      eprint={9999.9999},
      archivePrefix={arXiv},
      primaryClass={cs.DM}
}


@article{formalPythagoreanTriples,
author = {Cruz-Filipe, Lu\'{\i}s and Marques-Silva, Joao and Schneider-Kamp, Peter},
title = {Formally Verifying the Solution to the Boolean Pythagorean Triples Problem},
year = {2019},
issue_date = {Oct 2019},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {63},
number = {3},
issn = {0168-7433},
url = {https://doi.org/10.1007/s10817-018-9490-4},
doi = {10.1007/s10817-018-9490-4},
abstract = {The Boolean Pythagorean Triples problem asks: does there exist a binary coloring of the natural numbers such that every Pythagorean triple contains an element of each color? This problem was first solved in 2016, when Heule, Kullmann and Marek encoded a finite restriction of this problem as a propositional formula and showed its unsatisfiability. In this work we formalize their development in the theorem prover Coq. We state the Boolean Pythagorean Triples problem in Coq, define its encoding as a propositional formula and establish the relation between solutions to the problem and satisfying assignments to the formula. We verify Heule et al.’s proof by showing that the symmetry breaks they introduced to simplify the propositional formula are sound, and by implementing a correct-by-construction checker for proofs of unsatisfiability based on reverse unit propagation.},
journal = {J. Autom. Reason.},
month = {oct},
pages = {695–722},
numpages = {28},
keywords = {Interactive theorem proving, Large-scale proofs, SAT solving}
}


@mastersthesis{GilAndWennerbeck,
  author  = {Giljeg{\r{a}}rd, Sofia and Wennerbeck, Johan},
  school  = {Chalmers University of Technology},
  title   = {Puzzle Solving with Proof},
  year    = {2021}
}

@inproceedings{Cayden,
  author          = {Codel, Cayden and Heule, Marijn J. H. and Avigad, Jeremy},
  booktitle       = {Proceedings of the 23rd conference on Formal Methods In Computer-Aided Design},
  editor          = {Nadel, Alexander  and Rozie, Kristin Yvonne},
  title           = {Verified Encodings for SAT Solvers},
  year            = {2023}
}

@inproceedings{LPAR-21:Formally_Proving_Boolean_Pythagorean,
  author    = {Lu\textbackslash{}'is Cruz-Filipe and Peter Schneider-Kamp},
  title     = {Formally Proving the Boolean Pythagorean Triples Conjecture},
  booktitle = {LPAR-21. 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning},
  editor    = {Thomas Eiter and David Sands},
  series    = {EPiC Series in Computing},
  volume    = {46},
  pages     = {509--522},
  year      = {2017},
  publisher = {EasyChair},
  bibsource = {EasyChair, https://easychair.org},
  issn      = {2398-7340},
  url       = {https://easychair.org/publications/paper/xq6J},
  doi       = {10.29007/jvdj}}
  
  
  @article{lammichEfficientVerifiedSAT2020,
  title = {Efficient {{Verified}} ({{UN}}){{SAT Certificate Checking}}},
  author = {Lammich, Peter},
  year = {2020},
  month = mar,
  journal = {Journal of Automated Reasoning},
  volume = {64},
  number = {3},
  pages = {513--532},
  issn = {1573-0670},
  doi = {10.1007/s10817-019-09525-z},
  abstract = {SAT solvers decide the satisfiability of Boolean formulas in conjunctive normal form. They are commonly used for software and hardware verification. Modern SAT solvers are highly complex and optimized programs. As a single bug in the solver may invalidate the verification of many systems, SAT solvers output certificates for their answer, which are then checked independently. However, even certificate checking requires highly optimized non-trivial programs. This paper presents the first SAT solver certificate checker that is formally verified down to the integer sequence representing the formula. Our tool supports the full DRAT standard, and is even faster than the unverified state-of-the-art tool drat-trim, on a realistic set of benchmarks drawn from the 2016 and 2017 SAT competitions. An optional multi-threaded mode further reduces the runtime, in particular for big certificates.}
}


@inproceedings{oeVersatVerifiedModern2012,
  title = {Versat: {{A Verified Modern SAT Solver}}},
  booktitle = {Verification, {{Model Checking}}, and {{Abstract Interpretation}}},
  author = {Oe, Duckki and Stump, Aaron and Oliver, Corey and Clancy, Kevin},
  editor = {Kuncak, Viktor and Rybalchenko, Andrey},
  year = {2012},
  pages = {363--378},
  publisher = {{Springer Berlin Heidelberg}},
  address = {{Berlin, Heidelberg}},
  abstract = {This paper presents versat, a formally verified SAT solver incorporating the essential features of modern SAT solvers, including clause learning, watched literals, optimized conflict analysis, non-chronological backtracking, and decision heuristics. Unlike previous related work on SAT-solver verification, our implementation uses efficient low-level data structures like mutable C arrays for clauses and other solver state, and machine integers for literals. The implementation and proofs are written in Guru, a verified-programming language. We compare versat to a state-of-the-art SAT solver that produces certified ``unsat'' answers. We also show through an empirical evaluation that versat can solve SAT problems on the modern scale.},
  isbn = {978-3-642-27940-9}
}


@article{tanVerifiedPropagationRedundancy2023,
  title = {Verified {{Propagation Redundancy}} and {{Compositional UNSAT Checking}} in {{CakeML}}},
  author = {Tan, Yong Kiam and Heule, Marijn J. H. and Myreen, Magnus O.},
  year = {2023},
  month = apr,
  journal = {International Journal on Software Tools for Technology Transfer},
  volume = {25},
  number = {2},
  pages = {167--184},
  issn = {1433-2787},
  doi = {10.1007/s10009-022-00690-y},
  abstract = {Modern SAT solvers can emit independently-checkable proof certificates to validate their results. The state-of-the-art proof system that allows for compact proof certificates is propagation redundancy (\$\${\textbackslash}textsf\{PR\}\$\$). However, the only existing method to validate proofs in this system with a formally verified tool requires a transformation to a weaker proof system, which can result in a significant blowup in the size of the proof and increased proof validation time. This article describes the first approach to formally verify \$\${\textbackslash}textsf\{PR\}\$\$proofs on a succinct representation. We present (i) a new Linear PR (LPR) proof format, (ii) an extension of the DPR-trim tool to efficiently convert \$\${\textbackslash}textsf\{PR\}\$\$proofs into LPR format, and (iii) cake\_lpr, a verified LPR proof checker developed in CakeML. We also enhance these tools with (iv) a new compositional proof format designed to enable separate (parallel) proof checking. The LPR format is backwards compatible with the existing LRAT format, but extends LRAT with support for the addition of \$\${\textbackslash}textsf\{PR\}\$\$clauses. Moreover, cake\_lpr is verified using CakeML 's binary code extraction toolchain, which yields correctness guarantees for its machine code (binary) implementation. This further distinguishes our clausal proof checker from existing checkers because unverified extraction and compilation tools are removed from its trusted computing base. We experimentally show that: LPR provides efficiency gains over existing proof formats; cake\_lpr 's strong correctness guarantees are obtained without significant sacrifice in its performance; and the compositional proof format enables scalable parallel proof checking for large proofs.}
}

@mastersthesis{skotam_creusat_2022,
	title = {{CreuSAT}, Using {Rust} and {Creusot} to create the world’s fastest deductively verified {SAT} solver},
	url = {https://www.duo.uio.no/handle/10852/96757},
	school = {University of Oslo},
	author = {Skotåm, Sarek Høverstad},
	year = {2022},
}