@inproceedings{gonthierFourColourTheorem2008a,
  title     = {{The Four Colour Theorem: Engineering of a Formal Proof}},
  booktitle = {Computer {{Mathematics}}},
  author    = {Gonthier, Georges},
  editor    = {Kapur, Deepak},
  year      = {2008},
  pages     = {333--333},
  publisher = {{Springer Berlin Heidelberg}},
  address   = {{Berlin, Heidelberg}},
  abstract  = {The 150 year old Four Colour Theorem is the first famous result with a proof that requires large computer calculations. Such proofs are still controversial: It is thought that computer programs cannot be reviewed with mathematical rigor.},
  isbn      = {978-3-540-87827-8}
}

@book{biereHandbookSatisfiabilityVolume2009,
  title = {Handbook of {{Satisfiability}}: {{Volume}} 185 {{Frontiers}} in {{Artificial Intelligence}} and {{Applications}}},
  author = {Biere, A. and Biere, A. and Heule, M. and {van Maaren}, H. and Walsh, T.},
  year = {2009},
  publisher = {{IOS Press}},
  address = {{NLD}},
  abstract = {'Satisfiability (SAT) related topics have attracted researchers from various disciplines: logic, applied areas such as planning, scheduling, operations research and combinatorial optimization, but also theoretical issues on the theme of complexity and much more, they all are connected through SAT. My personal interest in SAT stems from actual solving: The increase in power of modern SAT solvers over the past 15 years has been phenomenal. It has become the key enabling technology in automated verification of both computer hardware and software. Bounded Model Checking (BMC) of computer hardware is now probably the most widely used model checking technique. The counterexamples that it finds are just satisfying instances of a Boolean formula obtained by unwinding to some fixed depth a sequential circuit and its specification in linear temporal logic. Extending model checking to software verification is a much more difficult problem on the frontier of current research. One promising approach for languages like C with finite word-length integers is to use the same idea as in BMC but with a decision procedure for the theory of bit-vectors instead of SAT. All decision procedures for bit-vectors that I am familiar with ultimately make use of a fast SAT solver to handle complex formulas. Decision procedures for more complicated theories, like linear real and integer arithmetic, are also used in program verification. Most of them use powerful SAT solvers in an essential way. Clearly, efficient SAT solving is a key technology for 21st century computer science. I expect this collection of papers on all theoretical and practical aspects of SAT solving will be extremely useful to both students and researchers and will lead to many further advances in the field.' Edmund Clarke (FORE Systems University Professor of Computer Science and Professor of Electrical and Computer Engineering at Carnegie Mellon University)},
  isbn = {1-58603-929-6}
}

@article{35erdos_combinatorial_problem_geometry,
author = {Paul Erd{\H{o}}s and Gy{\"o}rgy Szekeres},
journal = {Compositio Mathematica},
keywords = {Geometry},
language = {eng},
pages = {463-470},
publisher = {Johnson Reprint Corporation},
title = {A combinatorial problem in geometry},
url = {http://eudml.org/doc/88611},
volume = {2},
year = {1935},
}

@article{60erdos_some_extremum_problems_elementary_geometry,
  title={On some extremum problems in elementary geometry},
  author={Paul Erd{\H{o}}s and George Szekeres},
  journal={Ann. Univ. Sci. Budapest. E{\"o}tv{\"o}s Sect. Math.},
  volume={3},
  number={4},
  pages={53--62},
  year={1960}
}

@article{06szekeres_computer_solution_17_point_erdos_szekeres_problem,
  title={Computer solution to the 17-point Erd{\H{o}}s-Szekeres problem},
  author={George Szekeres and Lindsay Peters},
  journal={The ANZIAM Journal},
  volume={48},
  number={2},
  pages={151--164},
  year={2006},
  publisher={Cambridge University Press}
}

@inproceedings{21bright_sat_based_resolution_lams_problem,
  author       = {Curtis Bright and
                  Kevin K. H. Cheung and
                  Brett Stevens and
                  Ilias S. Kotsireas and
                  Vijay Ganesh},
  title        = {A SAT-based Resolution of Lam's Problem},
  booktitle    = {Thirty-Fifth {AAAI} Conference on Artificial Intelligence, {AAAI}
                  2021, Thirty-Third Conference on Innovative Applications of Artificial
                  Intelligence, {IAAI} 2021, The Eleventh Symposium on Educational Advances
                  in Artificial Intelligence, {EAAI} 2021, Virtual Event, February 2-9,
                  2021},
  pages        = {3669--3676},
  publisher    = {{AAAI} Press},
  year         = {2021},
  url          = {https://doi.org/10.1609/aaai.v35i5.16483},
  doi          = {10.1609/AAAI.V35I5.16483},
  timestamp    = {Mon, 04 Sep 2023 16:50:23 +0200},
  biburl       = {https://dblp.org/rec/conf/aaai/BrightCSKG21.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{hortonSetsNoEmpty1983,
  title     = {{Sets with No Empty Convex 7-Gons}},
  author    = {Horton, J. D.},
  year      = {1983},
  journal   = {Canadian Mathematical Bulletin},
  edition   = {2018/11/20},
  volume    = {26},
  number    = {4},
  pages     = {482--484},
  publisher = {{Cambridge University Press}},
  issn      = {0008-4395},
  doi       = {10.4153/CMB-1983-077-8},
  abstract  = {Erd{\"o}s has defined g(n) as the smallest integer such that any set of g(n) points in the plane, no three collinear, contains the vertex set of a convex n-gon whose interior contains no point of this set. Arbitrarily large sets containing no empty convex 7-gon are constructed, showing that g(n) does not exist for n{$\geq$}l. Whether g(6) exists is unknown.},
  keywords  = {52A40,Combinatorial geometry,convex polygon}
}

@article{Harborth1978,
  author   = {Harborth, Heiko},
  journal  = {Elemente der Mathematik},
  keywords = {Pentagons in Plane Point Sets},
  pages    = {116-118},
  title    = {{Konvexe Fünfecke in ebenen Punktmengen.}},
  url      = {http://eudml.org/doc/141217},
  volume   = {33},
  year     = {1978}
}


@incollection{appelFourColorProblem1978,
  title     = {{The Four-Color Problem}},
  booktitle = {Mathematics {{Today Twelve Informal Essays}}},
  author    = {Appel, Kenneth and Haken, Wolfgang},
  editor    = {Steen, Lynn Arthur},
  year      = {1978},
  pages     = {153--180},
  publisher = {{Springer New York}},
  address   = {{New York, NY}},
  doi       = {10.1007/978-1-4613-9435-8_7},
  abstract  = {In 1976, the Four-Color Problem was solved: every map drawn on a sheet of paper can be colored with only four colors in such a way that countries sharing a common border receive different colors. This result was of interest to the mathematical community since many mathematicians had tried in vain for over a hundred years to prove this simple-sounding statement. Yet among mathematicians who were not aware of the developments leading to the proof, the outcome had rather dismaying aspects, for the proof made unprecedented use of computer computation; the correctness of the proof cannot be checked without the aid of a computer. Moreover, adding to the strangeness of the proof, some of the crucial ideas were perfected by computer experiments. One can never rule out the chance that a short proof of the Four-Color Theorem might some day be found, perhaps by the proverbial bright high-school student. But it is also conceivable that no such proof is possible. In this case a new and interesting type of theorem has appeared, one which has no proof of the traditional type.},
  isbn      = {978-1-4613-9435-8}
}

@inproceedings{Walters2004ItAT,
  title  = {{It Appears That Four Colors Suffice : A Historical Overview of the Four-Color Theorem}},
  author = {Mark Walters},
  year   = {2004},
  url    = {https://api.semanticscholar.org/CorpusID:14382286}
}

@inproceedings{Wilson2002GraphsCA,
  title  = {{Graphs, Colourings and the Four-Colour Theorem}},
  author = {Robert Arnott Wilson and Robert Wilson},
  year   = {2002},
  url    = {https://api.semanticscholar.org/CorpusID:118001238}
}

@misc{avigad2023mathematics,
  title         = {Mathematics and the formal turn},
  author        = {Jeremy Avigad},
  year          = {2023},
  eprint        = {2311.00007},
  archiveprefix = {arXiv},
  primaryclass  = {math.HO}
}

@inproceedings{Subercaseaux_Heule_2023,
  series     = {Lecture Notes in Computer Science},
  title      = {{The Packing Chromatic Number of the Infinite Square Grid is 15}},
  volume     = {13993},
  rights     = {All rights reserved},
  doi        = {10.1007/978-3-031-30823-9_20},
  booktitle  = {Tools and Algorithms for the Construction and Analysis of Systems - 29th International Conference, TACAS 2023, Held as Part of ETAPS 2022, Proceedings, Part I},
  publisher  = {Springer},
  author     = {Subercaseaux, Bernardo and Heule, Marijn J. H.},
  editor     = {Sankaranarayanan, Sriram and Sharygina, Natasha},
  year       = {2023},
  pages      = {389–406},
  collection = {Lecture Notes in Computer Science}
}

@misc{brakensiek2023resolution,
  title         = {{The Resolution of Keller's Conjecture}},
  author        = {Joshua Brakensiek and Marijn Heule and John Mackey and David Narváez},
  year          = {2023},
  eprint        = {1910.03740},
  archiveprefix = {arXiv},
  primaryclass  = {math.CO}
}

@inbook{Heule_2016,
  title     = {{Solving and Verifying the Boolean Pythagorean Triples Problem via Cube-and-Conquer}},
  isbn      = {9783319409702},
  issn      = {1611-3349},
  url       = {http://dx.doi.org/10.1007/978-3-319-40970-2_15},
  doi       = {10.1007/978-3-319-40970-2_15},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer International Publishing},
  author    = {Heule, Marijn J. H. and Kullmann, Oliver and Marek, Victor W.},
  year      = {2016},
  pages     = {228–245}
}

@misc{konev2014sat,
  title         = {{A SAT Attack on the Erdos Discrepancy Conjecture}},
  author        = {Boris Konev and Alexei Lisitsa},
  year          = {2014},
  eprint        = {1402.2184},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DM}
}

@article{lambTwohundredterabyteMathsProof2016,
  title    = {{Two-Hundred-Terabyte Maths Proof Is Largest Ever}},
  author   = {Lamb, Evelyn},
  year     = {2016},
  month    = jun,
  journal  = {Nature},
  volume   = {534},
  number   = {7605},
  pages    = {17--18},
  issn     = {1476-4687},
  doi      = {10.1038/nature.2016.19990},
  abstract = {A computer cracks the Boolean Pythagorean triples problem {\textemdash} but is it really maths?}
}


@misc{emptyHexagonNumber,
      title={Happy Ending: An Empty Hexagon in Every Set of 30 Points}, 
      author={Marijn J. H. Heule and Manfred Scheucher},
      year={2024},
      eprint={2403.00737},
      archivePrefix={arXiv},
      primaryClass={cs.CG}
}



@article{formalPythagoreanTriples,
  author     = {Cruz-Filipe, Lu\'{i}s and Marques-Silva, Jo\~{a}o and Schneider-Kamp, Peter},
  title      = {{Formally Verifying the Solution to the Boolean Pythagorean Triples Problem}},
  year       = {2019},
  issue_date = {Oct 2019},
  publisher  = {Springer-Verlag},
  address    = {Berlin, Heidelberg},
  volume     = {63},
  number     = {3},
  issn       = {0168-7433},
  url        = {https://doi.org/10.1007/s10817-018-9490-4},
  doi        = {10.1007/s10817-018-9490-4},
  abstract   = {The Boolean Pythagorean Triples problem asks: does there exist a binary coloring of the natural numbers such that every Pythagorean triple contains an element of each color? This problem was first solved in 2016, when Heule, Kullmann and Marek encoded a finite restriction of this problem as a propositional formula and showed its unsatisfiability. In this work we formalize their development in the theorem prover Coq. We state the Boolean Pythagorean Triples problem in Coq, define its encoding as a propositional formula and establish the relation between solutions to the problem and satisfying assignments to the formula. We verify Heule et al.’s proof by showing that the symmetry breaks they introduced to simplify the propositional formula are sound, and by implementing a correct-by-construction checker for proofs of unsatisfiability based on reverse unit propagation.},
  journal    = {J. Autom. Reason.},
  month      = {oct},
  pages      = {695–722},
  numpages   = {28},
  keywords   = {Interactive theorem proving, Large-scale proofs, SAT solving}
}


@mastersthesis{GilAndWennerbeck,
  author = {Giljeg{\r{a}}rd, Sofia and Wennerbeck, Johan},
  school = {Chalmers University of Technology},
  title  = {{Puzzle Solving with Proof}},
  year   = {2021}
}

@inproceedings{Cayden,
  author    = {Codel, Cayden and Heule, Marijn J. H. and Avigad, Jeremy},
  booktitle = {Proceedings of the 23rd conference on Formal Methods In Computer-Aided Design},
  editor    = {Nadel, Alexander  and Rozie, Kristin Yvonne},
  title     = {{Verified Encodings for SAT Solvers}},
  year      = {2023}
}

@inproceedings{LPAR-21:Formally_Proving_Boolean_Pythagorean,
  author    = {Lu\'{i}s Cruz-Filipe and Peter Schneider-Kamp},
  title     = {{Formally Proving the Boolean Pythagorean Triples Conjecture}},
  booktitle = {LPAR-21. 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning},
  editor    = {Thomas Eiter and David Sands},
  series    = {EPiC Series in Computing},
  volume    = {46},
  pages     = {509--522},
  year      = {2017},
  publisher = {EasyChair},
  bibsource = {EasyChair, https://easychair.org},
  issn      = {2398-7340},
  url       = {https://easychair.org/publications/paper/xq6J},
  doi       = {10.29007/jvdj}
}

@article{lammichEfficientVerifiedSAT2020,
  title    = {{Efficient Verified (UN)SAT Certificate Checking}},
  author   = {Lammich, Peter},
  year     = {2020},
  month    = mar,
  journal  = {Journal of Automated Reasoning},
  volume   = {64},
  number   = {3},
  pages    = {513--532},
  issn     = {1573-0670},
  doi      = {10.1007/s10817-019-09525-z},
  abstract = {SAT solvers decide the satisfiability of Boolean formulas in conjunctive normal form. They are commonly used for software and hardware verification. Modern SAT solvers are highly complex and optimized programs. As a single bug in the solver may invalidate the verification of many systems, SAT solvers output certificates for their answer, which are then checked independently. However, even certificate checking requires highly optimized non-trivial programs. This paper presents the first SAT solver certificate checker that is formally verified down to the integer sequence representing the formula. Our tool supports the full DRAT standard, and is even faster than the unverified state-of-the-art tool drat-trim, on a realistic set of benchmarks drawn from the 2016 and 2017 SAT competitions. An optional multi-threaded mode further reduces the runtime, in particular for big certificates.}
}


@misc{subercaseaux2023minimizing,
  title         = {Minimizing Pentagons in the Plane through Automated Reasoning},
  author        = {Bernardo Subercaseaux and John Mackey and Marijn J. H. Heule and Ruben Martins},
  year          = {2023},
  eprint        = {2311.03645},
  archiveprefix = {arXiv},
  primaryclass  = {cs.CG}
}


@inproceedings{The_mathlib_Community_2020,
  series     = {POPL ’20},
  title      = {The lean mathematical library},
  url        = {http://dx.doi.org/10.1145/3372885.3373824},
  doi        = {10.1145/3372885.3373824},
  booktitle  = {Proceedings of the 9th ACM SIGPLAN International Conference on Certified Programs and Proofs},
  publisher  = {ACM},
  author     = {The mathlib Community},
  year       = {2020},
  month      = jan,
  collection = {POPL ’20}
}

@inproceedings{demouraLeanTheoremProver2015,
  title     = {The {{Lean Theorem Prover}} ({{System Description}})},
  booktitle = {Automated {{Deduction}} - {{CADE-25}}},
  author    = {{de Moura}, Leonardo and Kong, Soonho and Avigad, Jeremy and {van Doorn}, Floris and {von Raumer}, Jakob},
  editor    = {Felty, Amy P. and Middeldorp, Aart},
  year      = {2015},
  pages     = {378--388},
  publisher = {{Springer International Publishing}},
  address   = {{Cham}},
  abstract  = {Lean is a new open source theorem prover being developed at Microsoft Research and Carnegie Mellon University, with a small trusted kernel based on dependent type theory. It aims to bridge the gap between interactive and automated theorem proving, by situating automated tools and methods in a framework that supports user interaction and the construction of fully specified axiomatic proofs. Lean is an ongoing and long-term effort, but it already provides many useful components, integrated development environments, and a rich API which can be used to embed it into other systems. It is currently being used to formalize category theory, homotopy type theory, and abstract algebra. We describe the project goals, system architecture, and main features, and we discuss applications and continuing work.},
  isbn      = {978-3-319-21401-6}
}


@article{felsnerSweepsArrangementsSignotopes2001,
  title    = {Sweeps, Arrangements and Signotopes},
  author   = {Felsner, Stefan and Weil, Helmut},
  year     = {2001},
  month    = apr,
  journal  = {Discrete Applied Mathematics},
  series   = {14th {{European Workshop}} on {{Computational Geometry}}},
  volume   = {109},
  number   = {1},
  pages    = {67--94},
  issn     = {0166-218X},
  doi      = {10.1016/S0166-218X(00)00232-8},
  urldate  = {2023-10-11},
  abstract = {Sweeping is an important algorithmic tool in geometry. In the first part of this paper we define sweeps of arrangements and use the ``Sweeping Lemma'' to show that Euclidean arrangements of pseudolines can be represented by wiring diagrams and zonotopal tilings. In the second part we introduce a further representation for Euclidean arrangements of pseudolines. This representation records an ``orientation'' for each triple of lines. It turns out that a ``triple orientation'' corresponds to an arrangement exactly if it obeys a generalized transitivity law. Moreover, the ``triple orientations'' carry a natural order relation which induces an order relation on arrangements. A closer look on the combinatorics behind this leads to a series of signotope orders closely related to higher Bruhat orders. We investigate the structure of higher Bruhat orders and give new purely combinatorial proofs for the main structural properties. Finally, we reconnect the combinatorics of the second part to geometry. In particular, we show that the maximum chains in the higher Bruhat orders correspond to sweeps.},
  keywords = {Arrangement,Higher Bruhat order,Pseudoline,Sweep},
  file     = {/Users/bsuberca/Zotero/storage/GCCQ2FD7/Felsner and Weil - 2001 - Sweeps, arrangements and signotopes.pdf;/Users/bsuberca/Zotero/storage/QBPV8WFJ/S0166218X00002328.html}
}


@article{szekeres_peters_2006,
  title     = {Computer solution to the 17-point {Erd\H{o}s-Szekeres} problem},
  volume    = {48},
  doi       = {10.1017/S144618110000300X},
  number    = {2},
  journal   = {The ANZIAM Journal},
  publisher = {Cambridge University Press},
  author    = {Szekeres, George and Peters, Lindsay},
  year      = {2006},
  pages     = {151–164}
}

@article{scheucherTwoDisjoint5holes2020,
  title    = {Two Disjoint 5-Holes in Point Sets},
  author   = {Scheucher, Manfred},
  year     = {2020},
  month    = dec,
  journal  = {Computational Geometry},
  volume   = {91},
  pages    = {101670},
  issn     = {0925-7721},
  doi      = {10.1016/j.comgeo.2020.101670},
  urldate  = {2023-10-10},
  abstract = {Given a set of points S{$\subseteq$}R2, a subset X{$\subseteq$}S with {\textbar}X{\textbar}=k is called k-gon if all points of X lie on the boundary of the convex hull of X, and k-hole if, in addition, no point of S∖X lies in the convex hull of X. We use computer assistance to show that every set of 17 points in general position admits two disjoint 5-holes, that is, holes with disjoint respective convex hulls. This answers a question of Hosono and Urabe (2001). We also provide new bounds for three and more pairwise disjoint holes. In a recent article, Hosono and Urabe (2018) present new results on interior-disjoint holes {\textendash} a variant, which also has been investigated in the last two decades. Using our program, we show that every set of 15 points contains two interior-disjoint 5-holes. Moreover, our program can be used to verify that every set of 17 points contains a 6-gon within significantly smaller computation time than the original program by Szekeres and Peters (2006). Another independent verification of this result was done by Mari{\'c} (2019).},
  keywords = {Boolean satisfiability (SAT),Empty convex polygon,Erdos-Szekeres-type problem},
  file     = {/Users/bsuberca/Zotero/storage/CWGPQDUN/Scheucher - 2020 - Two disjoint 5-holes in point sets.pdf}
}


@incollection{knuthAxiomsHulls1992,
  title     = {Axioms and {{Hulls}}},
  booktitle = {Axioms and {{Hulls}}},
  editor    = {Knuth, Donald E.},
  author   = {Knuth, Donald E.},
  year      = {1992},
  series    = {Lecture {{Notes}} in {{Computer Science}}},
  pages     = {1--98},
  publisher = {{Springer}},
  address   = {{Berlin, Heidelberg}},
  doi       = {10.1007/3-540-55611-7_1},
  urldate   = {2023-10-11},
  isbn      = {978-3-540-47259-9},
  langid    = {english},
  keywords  = {Binary Search Tree,Convex Hull,Delaunay Triangulation,Oriented Matroids,Signed Permutation},
  file      = {/Users/bsuberca/Zotero/storage/6BN4T7I6/Knuth - 1992 - Axioms and Hulls.pdf}
}


@inproceedings{oeVersatVerifiedModern2012,
  title     = {{Versat: A Verified Modern SAT Solver}},
  booktitle = {{Verification, Model Checking, and Abstract Interpretation}},
  author    = {Oe, Duckki and Stump, Aaron and Oliver, Corey and Clancy, Kevin},
  editor    = {Kuncak, Viktor and Rybalchenko, Andrey},
  year      = {2012},
  pages     = {363--378},
  publisher = {{Springer Berlin Heidelberg}},
  address   = {{Berlin, Heidelberg}},
  abstract  = {This paper presents versat, a formally verified SAT solver incorporating the essential features of modern SAT solvers, including clause learning, watched literals, optimized conflict analysis, non-chronological backtracking, and decision heuristics. Unlike previous related work on SAT-solver verification, our implementation uses efficient low-level data structures like mutable C arrays for clauses and other solver state, and machine integers for literals. The implementation and proofs are written in Guru, a verified-programming language. We compare versat to a state-of-the-art SAT solver that produces certified ``unsat'' answers. We also show through an empirical evaluation that versat can solve SAT problems on the modern scale.},
  isbn      = {978-3-642-27940-9}
}


@article{tanVerifiedPropagationRedundancy2023,
  title    = {{Verified Propagation Redundancy and Compositional UNSAT Checking in CakeML}},
  author   = {Tan, Yong Kiam and Heule, Marijn J. H. and Myreen, Magnus O.},
  year     = {2023},
  month    = apr,
  journal  = {International Journal on Software Tools for Technology Transfer},
  volume   = {25},
  number   = {2},
  pages    = {167--184},
  issn     = {1433-2787},
  doi      = {10.1007/s10009-022-00690-y},
  abstract = {Modern SAT solvers can emit independently-checkable proof certificates to validate their results. The state-of-the-art proof system that allows for compact proof certificates is propagation redundancy (\$\${\textbackslash}textsf\{PR\}\$\$). However, the only existing method to validate proofs in this system with a formally verified tool requires a transformation to a weaker proof system, which can result in a significant blowup in the size of the proof and increased proof validation time. This article describes the first approach to formally verify \$\${\textbackslash}textsf\{PR\}\$\$proofs on a succinct representation. We present (i) a new Linear PR (LPR) proof format, (ii) an extension of the DPR-trim tool to efficiently convert \$\${\textbackslash}textsf\{PR\}\$\$proofs into LPR format, and (iii) cake\_lpr, a verified LPR proof checker developed in CakeML. We also enhance these tools with (iv) a new compositional proof format designed to enable separate (parallel) proof checking. The LPR format is backwards compatible with the existing LRAT format, but extends LRAT with support for the addition of \$\${\textbackslash}textsf\{PR\}\$\$clauses. Moreover, cake\_lpr is verified using CakeML 's binary code extraction toolchain, which yields correctness guarantees for its machine code (binary) implementation. This further distinguishes our clausal proof checker from existing checkers because unverified extraction and compilation tools are removed from its trusted computing base. We experimentally show that: LPR provides efficiency gains over existing proof formats; cake\_lpr 's strong correctness guarantees are obtained without significant sacrifice in its performance; and the compositional proof format enables scalable parallel proof checking for large proofs.}
}

@mastersthesis{skotam_creusat_2022,
  title  = {{CreuSAT, Using Rust and Creusot to create the world’s fastest deductively verified SAT solver}},
  url    = {https://www.duo.uio.no/handle/10852/96757},
  school = {University of Oslo},
  author = {Skotåm, Sarek Høverstad},
  year   = {2022}
}

@article{Castelvecchi2021,
  title     = {Mathematicians welcome computer-assisted proof in ‘grand unification’ theory},
  volume    = {595},
  issn      = {1476-4687},
  url       = {http://dx.doi.org/10.1038/d41586-021-01627-2},
  doi       = {10.1038/d41586-021-01627-2},
  number    = {7865},
  journal   = {Nature},
  publisher = {Springer Science and Business Media LLC},
  author    = {Castelvecchi,  Davide},
  year      = {2021},
  month     = jun,
  pages     = {18–19}
}

@misc{gowers2023conjecture,
  title         = {On a conjecture of Marton},
  author        = {W. T. Gowers and Ben Green and Freddie Manners and Terence Tao},
  year          = {2023},
  eprint        = {2311.05762},
  archiveprefix = {arXiv},
  primaryclass  = {math.NT}
}

@misc{slomanATeamMathProves2023,
  title        = {{`A-Team' of Math Proves a Critical Link Between Addition and Sets}},
  author       = {Sloman, Leila},
  year         = {2023},
  month        = dec,
  journal      = {Quanta Magazine},
  urldate      = {2024-02-19},
  abstract     = {A team of four prominent mathematicians, including two Fields medalists, proved a conjecture described as a ``holy grail of additive combinatorics.''},
  howpublished = {https://www.quantamagazine.org/a-team-of-math-proves-a-critical-link-between-addition-and-sets-20231206/},
  langid       = {english},
  file         = {/Users/bsuberca/Zotero/storage/VYHKVTDB/a-team-of-math-proves-a-critical-link-between-addition-and-sets-20231206.html}
}

@article{valtr,
  author  = {Valtr, Pavel},
  year    = {2008},
  month   = {01},
  pages   = {},
  title   = {On empty hexagons},
  volume  = {453},
  isbn    = {9780821842393},
  journal = {Surveys on Discrete and Computational Geometry, Twenty Years Later, AMS},
  doi     = {10.1090/conm/453/08809}
}


@article{nicolasEmptyHexagonTheorem2007,
  title    = {{The Empty Hexagon Theorem}},
  author   = {Nicolas, Carlos M.},
  year     = {2007},
  month    = sep,
  journal  = {Discrete \& Computational Geometry},
  volume   = {38},
  number   = {2},
  pages    = {389--397},
  issn     = {1432-0444},
  doi      = {10.1007/s00454-007-1343-6},
  urldate  = {2024-02-19},
  abstract = {Let P be a finite set of points in general position in the plane. Let C(P) be the convex hull of P and  let CiP be the ith convex layer of P. A minimal convex set S of P is a convex subset of P such that every convex set of P {$\cap$} C(S) different from S has cardinality strictly less than {\textbar}S{\textbar}. Our main theorem states that P contains an empty convex hexagon if C1P is minimal and C4P is not empty. Combined with the Erdos-Szekeres theorem, this result implies that every set P with sufficiently many points contains an empty convex hexagon, giving an affirmative answer to a question posed by Erdos in 1977.},
  langid   = {english},
  keywords = {Convex Hull,Convex Subset,Discrete Comput Geom,General Position,Minimal Convex},
  file     = {/Users/bsuberca/Zotero/storage/HDDGKIJK/Nicolas - 2007 - The Empty Hexagon Theorem.pdf}
}


@article{gerkenEmptyConvexHexagons2008,
  title    = {{Empty Convex Hexagons in Planar Point Sets}},
  author   = {Gerken, Tobias},
  year     = {2008},
  month    = mar,
  journal  = {Discrete \& Computational Geometry},
  volume   = {39},
  number   = {1},
  pages    = {239--272},
  issn     = {1432-0444},
  doi      = {10.1007/s00454-007-9018-x},
  urldate  = {2024-02-19},
  abstract = {Erd{\H o}s asked whether every sufficiently large set of points in general position in the plane contains six points that form a convex hexagon without any points from the set in its interior. Such a configuration is called an empty convex hexagon. In this paper, we answer the question in the affirmative. We show that every set that contains the vertex set of a convex 9-gon also contains an empty convex hexagon.},
  langid   = {english},
  keywords = {Convex polygons and polyhedra,Empty hexagon problem,Erdos-Szekeres problem,Ramsey theory},
  file     = {/Users/bsuberca/Zotero/storage/SMZUA6QW/Gerken - 2008 - Empty Convex Hexagons in Planar Point Sets.pdf}
}

@inproceedings{bryant2023,
  author =	{Bryant, Randal E. and Nawrocki, Wojciech and Avigad, Jeremy and Heule, Marijn J. H.},
  title =	{{Certified Knowledge Compilation with Application to Verified Model Counting}},
  booktitle =	{26th International Conference on Theory and Applications of Satisfiability Testing (SAT 2023)},
  pages =	{6:1--6:20},
  series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
  ISBN =	{978-3-95977-286-0},
  ISSN =	{1868-8969},
  year =	{2023},
  volume =	{271},
  editor =	{Mahajan, Meena and Slivovsky, Friedrich},
  publisher =	{Schloss Dagstuhl -- Leibniz-Zentrum f{\"u}r Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.SAT.2023.6},
  URN =		{urn:nbn:de:0030-drops-184685},
  doi =		{10.4230/LIPIcs.SAT.2023.6},
  annote =	{Keywords: Propositional model counting, Proof checking}
}

@misc{heule2017schur,
      title={Schur Number Five}, 
      author={Marijn J. H. Heule},
      year={2017},
      eprint={1711.08076},
      archivePrefix={arXiv},
      primaryClass={cs.LO}
}

@article{19maric_fast_formal_proof_erdos_szekeres_conjecture_convex_polygons_most_six_points,
  author       = {Filip Maric},
  title        = {Fast Formal Proof of the Erd{\H{o}}s-Szekeres Conjecture for Convex
                  Polygons with at Most 6 Points},
  journal      = {J. Autom. Reason.},
  volume       = {62},
  number       = {3},
  pages        = {301--329},
  year         = {2019},
  url          = {https://doi.org/10.1007/s10817-017-9423-7},
  doi          = {10.1007/S10817-017-9423-7},
  timestamp    = {Wed, 02 Sep 2020 13:29:57 +0200},
  biburl       = {https://dblp.org/rec/journals/jar/Maric19.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{10maric_formal_verification_modern_sat_solver_shallow_embedding_isabelle_hol,
  author       = {Filip Maric},
  title        = {Formal verification of a modern {SAT} solver by shallow embedding
                  into Isabelle/HOL},
  journal      = {Theor. Comput. Sci.},
  volume       = {411},
  number       = {50},
  pages        = {4333--4356},
  year         = {2010},
  url          = {https://doi.org/10.1016/j.tcs.2010.09.014},
  doi          = {10.1016/J.TCS.2010.09.014},
  timestamp    = {Wed, 17 Feb 2021 21:59:15 +0100},
  biburl       = {https://dblp.org/rec/journals/tcs/Maric10.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{suk2017erdos,
  title={On the Erd{\H{o}}s-Szekeres convex polygon problem},
  author={Suk, Andrew},
  journal={Journal of the American Mathematical Society},
  volume={30},
  number={4},
  pages={1047--1053},
  year={2017}
}

@article{holmsen2017two,
  title={Two extensions of the Erd{\H{o}}s-Szekeres problem},
  author={Holmsen, Andreas F and Mojarrad, Hossein Nassajian and Pach, J{\'a}nos and Tardos, G{\'a}bor},
  journal={arXiv preprint arXiv:1710.11415},
  year={2017}
}

@inproceedings{20lean_mathematical_library,
  editor       = {Jasmin Blanchette and
                  Catalin Hritcu},
  title        = {The lean mathematical library},
  booktitle    = {Proceedings of the 9th {ACM} {SIGPLAN} International Conference on
                  Certified Programs and Proofs, {CPP} 2020, New Orleans, LA, USA, January
                  20-21, 2020},
  pages        = {367--381},
  publisher    = {{ACM}},
  year         = {2020},
  url          = {https://doi.org/10.1145/3372885.3373824},
  doi          = {10.1145/3372885.3373824},
  timestamp    = {Sun, 02 Oct 2022 15:58:04 +0200},
  biburl       = {https://dblp.org/rec/conf/cpp/X20.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

